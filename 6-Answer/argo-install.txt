## การใช้งานแบบ GUI BROWSER

# การติดตั้ง ARGOCD

kubectl create ns argocd

kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

kubectl patch svc argocd-server -n argocd -p '{"spec": {"type":"LoadBalancer"}}'

kubectl port-forward svc/argocd-server -n argocd 8080:443

# ( access svc port 443 to external  https://x.x.x.x:8080 )

kubectl port-forward svc/argocd-server -n argocd --address x.x.x.x 8080:443

# GET PASSWORD LOGIN
kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d




## การใช้งานแบบ CLI 

## ติดตั้ง 

curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64


## permission

chmod +x /usr/local/bin/argocd


## login argocd

argocd login argocd.example.com --insecure


##  การ add git 

argocd repo add https://github.com/wachira90/xxxxx.git --username your-username --password your-password


## สร้างแอปพลิเคชัน ArgoCD ที่ชี้ไปยังที่เก็บ Git

argocd app create hello-app \
  --repo https://github.com/wachira90/xxxxx.git \
  --path app-folder \
  --dest-server https://kubernetes.default.svc \
  --dest-namespace prod


## อธิบาย

hello-app ชื่อแอปพลิเคชัน
--repo URL ของที่เก็บ Git
--path เส้นทางภายในที่เก็บที่มีการแสดง Kubernetes ( Helm charts, Kustomize หรือ YAML )
--dest-server คลัสเตอร์ที่แอปจะถูกปรับใช้ ( https://kubernetes.default.svc สำหรับภายในคลัสเตอร์ )
--dest-namespace เนมสเปซสำหรับแอปพลิเคชัน

